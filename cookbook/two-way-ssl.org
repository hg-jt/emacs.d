#+TITLE: Two-way SSL w/custom client certs with *Emacs for OSX*

* Problem

Using Emacs rest-client for two-way SSL authentication on OS X.


* Solution

#+BEGIN_quote
Since certs are likely unique to your user/machine, the following configuration
should be added to =~/.emacs.d/site-lisp/default.el=, rather than the main
=~/.emacs.d/init.el= file.
#+END_quote

*** 1. Ensure you have the latet CA cert bundle

Install /openssl/ with Homebrew:

#+BEGIN_src sh
brew install openssl
#+END_src

This will install a the CA bundle in =/usr/local/etc/openssl/cert.pem=.


*** 2. Add the latest CA bundle to the list of common trustfiles

#+BEGIN_src elisp
(eval-after-load "gnutls"
  (lambda ()
    (add-to-list 'gnutls-trustfiles "/usr/local/etc/openssl/cert.pem")))
#+END_src

*** 3. Configure Emacs to ignore the built-in gnutls in favor of the command line app

#+BEGIN_src elisp
(eval-after-load "tls"
  (lambda ()
  ;; force the use of external gnutls-cli for custom certs
  (when (fboundp 'gnutls-available-p)
  (defun gnutls-available-p () nil)) ))
#+END_src


*** 4. Configure tls-program to use your custom certs

In the same block as the previous step, add a custom string for invoking
*gnutls-cli* with your custom certs.

#+BEGIN_src elisp    
(eval-after-load "tls"
  (lambda ()
    ;; force the use of external gnutls-cli for custom certs
    (when (fboundp 'gnutls-available-p)
      (defun gnutls-available-p () nil))

    ;; add custom gnutls-cli command
    (add-to-list 'tls-program
                 "gnutls-cli -p %p --x509cafile /path/to/ca/ca.pem --x509keyfile /path/to/key/key.pem --x509certfile /path/to/cert/public.pem %h"
                 t)))
#+END_src
